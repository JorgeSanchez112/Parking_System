<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>